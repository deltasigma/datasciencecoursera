# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
print(cases)
a <- 1
## Iterate over cases to find and processes the ones above threshold
for (i in cases) {
print(a)
a <- a+1
print(i)
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
print(cases)
trcases <- cases$nobs >= threshold
print(trcases)
a <- 1
## Iterate over cases to find and processes the ones above threshold
for (i in cases) {
print(a)
a <- a+1
print(i)
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
print(cases)
trcases <- cases$nobs >= threshold
cases[trcases]
a <- 1
## Iterate over cases to find and processes the ones above threshold
for (i in cases) {
print(a)
a <- a+1
print(i)
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
print(cases)
trcases <- cases$nobs >= threshold
cases[trcases,]
a <- 1
## Iterate over cases to find and processes the ones above threshold
for (i in cases) {
print(a)
a <- a+1
print(i)
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
print(cases)
trcases <- cases$nobs >= threshold
cases[trcases,]
## Iterate over cases to find and processes the ones above threshold
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
print(cases)
trcases <- cases$nobs >= threshold
print(cases[trcases,])
## Iterate over cases to find and processes the ones above threshold
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
print(cases)
trcases <- cases$nobs >= threshold
print(cases[trcases,]$id)
## Iterate over cases to find and processes the ones above threshold
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
cases <- data.frame(complete(directory,1:332))
#cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
print(cases)
trcases <- cases$nobs >= threshold
print(cases[trcases,]$id)
## Iterate over cases to find and processes the ones above threshold
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
cases <- data.frame(complete(directory,1:332))
#cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
print(casesok)
## Iterate over cases to find and processes the ones above threshold
}
cr <- corr("specdata", 150)
cr <- corr("specdata", 300)
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
print(casesok)
## Iterate over cases to find and processes the ones above threshold
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in caseok) {
print(case)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
print(case)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
## Calculate the correlation
prin(sensor)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
## Calculate the correlation
print(sensor)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Calculate the correlation
print(sensor)
print(datafile)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Calculate the correlation
print(sensor)
print(datafile$sulfate)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Find complete cases
casecomplete <- complete.cases(data)
## Calculate the correlation
print(casecomplete)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Find complete cases
casecomplete <- complete.cases(datafile)
## Calculate the correlation
print(casecomplete)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Find complete cases
okcases <- complete.cases(datafile)
## Calculate the correlation in corrvector
corrvector <- datafile[okcases]
print(corrvector)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Find complete cases
okcases <- complete.cases(datafile)
## Calculate the correlation in corrvector
corrvector <- datafile[okcases,]
print(corrvector)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Find complete cases
okcases <- complete.cases(datafile)
## Calculate the correlation in corrvector
corrvector <- datafile[okcases,]
print(corrvector$sufate)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Find complete cases
okcases <- complete.cases(datafile)
## Calculate the correlation in corrvector
corrvector <- datafile[okcases,]
print(corrvector$sulfate)
}
}
cr <- corr("specdata", 300)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
#corcases <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Find complete cases
okcases <- complete.cases(datafile)
## Calculate the correlation in corrvector
corrvector <- datafile[okcases,]
print(cor(corrvector$sulfate,corrvector$nitrate))
}
}
cr <- corr("specdata", 300)
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
correlations <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Find complete cases
okcases <- complete.cases(datafile)
## Calculate the correlation in corrvector
corrvector <- datafile[okcases,]
correlations <- c(correlations, cor(corrvector$sulfate,corrvector$nitrate))
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
#cases <- data.frame(complete(directory,1:332))
cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
correlations <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Find complete cases
okcases <- complete.cases(datafile)
## Calculate the correlation in corrvector
corrvector <- datafile[okcases,]
correlations <- c(correlations, cor(corrvector$sulfate,corrvector$nitrate))
}
return(correlations)
}
cr <- corr("specdata", 150)
print(cr)
summary(cr)
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
cases <- data.frame(complete(directory,1:332))
#cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
correlations <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Find complete cases
okcases <- complete.cases(datafile)
## Calculate the correlation in corrvector
corrvector <- datafile[okcases,]
correlations <- c(correlations, cor(corrvector$sulfate,corrvector$nitrate))
}
return(correlations)
}
cr <- corr("specdata", 150)
summary(cr)
submit()
submit()
submit()
corr <- function(directory, threshold = 0) {
# Find complete cases number in directory
cases <- data.frame(complete(directory,1:332))
#cases <- data.frame(complete(directory,1:5))
# Store correlations in this vector
correlations <- vector()
# Find which cases are above threshold
trcases <- cases$nobs >= threshold
casesok <- cases[trcases,]$id
## Iterate over cases to processes the ones above threshold
for (case in casesok) {
## Load file for that case
sensor <- paste(directory,"/",sprintf("%03d",case),".csv",sep = "")
datafile <- read.table(sensor,header=TRUE,sep=",")
## Find complete cases
okcases <- complete.cases(datafile)
## Calculate the correlation in corrvector
corrvector <- datafile[okcases,]
correlations <- c(correlations, cor(corrvector$nitrate,corrvector$sulfate))
}
return(correlations)
}
cr <- corr("specdata", 150)
summary(cr)
head(cr)
submit()
submit()
submit()
library(swirl)
ls
library(swirl)
swirl
next
install.packages("swirl")
