# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
# Create PNG file
dev.off()
install.library('RMySQL')
library.install('RMySQL')
install.packages('RMySQL')
install.packages('RMySQL', type="source")
library('RMySQL')
db <- dbConnect(MySQL,user="genome",)
db <- dbConnect(MySQL,user="genome", host="genome-mysql.cse.ucsc.edu")
db <- dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
dbDisconnect(db)
result
count(result)
head(result)
source('http://bioconductor.org/biocLite.R')
biocLite("rhdf5")
setwd("~/DataScience/datasciencecoursera/3_getdata/q3")
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./acs.csv", method = "curl")
ACS <- read.table("acs.csv")
View(ACS)
View(ACS)
ACS <- read.table("acs.csv", sep=",")
View(ACS)
ACS <- read.table("acs.csv", sep=",", header=T)
View(ACS)
str(ACS)
ACS$AGS
ACS$AGS > 6
ACS$AGS == 6
ACS$ACR == 1
ACS[ACS$AGS == 6 & ACS$ACR == 1]
ACS$AGS == 6 & ACS$ACR == 1
agricultureLogical <- ACS[ACS$AGS == 6 & ACS$ACR == 1, ]
agricultureLogical
agricultureLogical <- ACS$AGS == 6 & ACS$ACR == 1
agricultureLogical
which(agricultureLogical)
agricultureLogical <- ACS$AGS == 6 & ACS$ACR == 3
which(agricultureLogical)
imgUrl = "agricultureLogical <- ACS$AGS == 6 & ACS$ACR == 1"
download.file(imgUrl, destfile = "./img.jpg", method = "curl")
imgUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(imgUrl, destfile = "./img.jpg", method = "curl")
library(jpeg)
install.packages(jpeg)
install.packages("jpeg")
library(jpeg)
readJPEG("img.jpg", native=F)
img <- readJPEG("img.jpg", native=F)
quantiles(img)
quantile
quantile()
quantile(img)
quantile(img,c(0,30,80))
quantile(img,c(0,0.30,0.80))
quantile(img,c(0.3,0.8))
quantile(img,probs=c(0.3,0.8))
quantile(img,probs=c(0.3,0.8,1))
quantile(img,probs=c(0.3,0.8))
imgUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(imgUrl, destfile = "./img.jpg", method = "curl")
img <- readJPEG("img.jpg", native=F)
quantile(img,probs=c(0.3,0.8))
a <- quantile(img,probs=c(0.3,0.8))
a
a[[1]]
a[[1]] -  638
imgUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(imgUrl, destfile = "./img.jpg", method = "curl")
img <- readJPEG("img.jpg", native=T)
quantile(img,probs=c(0.3,0.8))
fileUrl1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1, destfile = "./gdp.csv", method = "curl")
download.file(fileUrl1, destfile = "./edc.csv", method = "curl")
GDP <- read.table("gdp.csv", header=T)
GDP <- read.table("gdp.csv", header=T, sep=",")
GDP <- read.table("gdp.csv", header=F, sep=",", skip=5)
View(GDP)
GDP <- read.table("gdp.csv", header=F, sep=",", skip=5)
View(GDP)
GDP <- read.table("gdp.csv", header=F, sep=",", skip=5)
download.file(fileUrl2, destfile = "./edc.csv", method = "curl")
fileUrl2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl2, destfile = "./edc.csv", method = "curl")
EDC <- read.table("edc.csv", header=F, sep=",", skip=5)
EDC <- read.table("edc.csv", header=T, sep=",")
EDC <- read.table("edc.csv", header=T, sep=",", skip=13)
EDC <- read.table("edc.csv", header=T, sep=",")
download.file(fileUrl2, destfile = "./edc.csv", method = "curl")
EDC <- read.table("edc.csv", header=T, sep=",")
View(GDP)
?read.table
EDC <- read.table("edc.csv", header=T, sep=",", nrows=5)
View(EDC)
EDC <- read.table("edc.csv", header=T, sep=",", nrows=10)
View(EDC)
EDC <- read.table("edc.csv", header=T, sep=",", nrows=15)
EDC <- read.table("edc.csv", header=T, sep=",", nrows=14)
EDC <- read.table("edc.csv", header=T, sep=",", nrows=13)
View(EDC)
EDC <- read.table("edc.csv", header=T, sep=",", comment.char = "", nrows=13)
EDC <- read.table("edc.csv", header=T, sep=",", comment.char = "", nrows=15)
EDC <- read.table("edc.csv", header=T, sep=",", comment.char = "", nrows=14)
EDC <- read.table("edc.csv", header=T, sep=",", comment.char = "", nrows=13)
View(EDC)
EDC <- read.table("edc.csv", header=T, sep=",", allowEscapes = T, nrows=13)
EDC <- read.table("edc.csv", header=T, sep=",", allowEscapes = T, nrows=15)
EDC <- read.table("edc.csv", header=T, sep=",", strip.white=T, nrows=15)
EDC <- read.table("edc.csv", header=T, sep=",", strip.white=T,
nrows=15,
fileEncoding="latin1")
EDC <- read.table("edc.csv", header=T, sep=",", strip.white=T,
nrows=15,
fileEncoding="UTF-8")
EDC <- read.table("edc.csv", header=T, sep=",", strip.white=T,
nrows=15,
fileEncoding="UTF-8")
EDC <- read.table("edc.csv", header=T, sep=",", strip.white=T,
nrows=15
)
EDC <- read.table("edc.csv", header=T, sep=",", strip.white=T,
nrows=30
)
View(EDC)
EDC <- read.table("edc.csv", header=T, sep=",", strip.white=T,
nrows=30
)
EDC <- read.table("edc.csv", header=T, sep=",", strip.white=T, quote= "",
nrows=30
)
EDC <- read.table("edc.csv", header=T, sep=",", quote= "",
nrows=30)
EDC <- read.table("edc.csv", header=T, sep=",", quote= "",
nrows=10
)
EDC <- read.table("edc.csv", header=T, sep=",", quote= "\"",
nrows=10)
EDC <- read.table("edc.csv", header=T, sep=",", quote= "\"",
nrows=30)
EDC <- read.table("edc.csv", header=T, sep=",", quote= "\"")
View(EDC)
GDP <- read.table("gdp.csv", header=F, sep=",", quote="\"", strip.white=T, skip=5)
View(GDP)
GDP <- read.table("gdp.csv", header=F, sep=",",
quote="\"", strip.white=T, skip=5, nrows = 192)
View(GDP)
GDP <- read.table("gdp.csv", header=F, sep=",", fileEnconding="UTF-8"
quote="\"", strip.white=T, skip=5, nrows = 192)
GDP <- read.table("gdp.csv", header=F, sep=",", fileEnconding="UTF-8",
quote="\"", strip.white=T, skip=5, nrows = 192)
GDP <- read.table("gdp.csv", header=F, sep=",", enconding="UTF-8",
quote="\"", strip.white=T, skip=5, nrows = 192)
GDP <- read.table("gdp.csv", header=F, sep=",", encoding="UTF-8",
quote="\"", strip.white=T, skip=5, nrows = 192)
View(GDP)
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="UTF-8",
quote="\"", strip.white=T, skip=5, nrows = 192)
View(GDP)
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", strip.white=T, skip=5, nrows = 192)
View(GDP)
GDP <- read.table("gdp.csv", header=F, sep=",",
quote="\"", strip.white=T, skip=5, nrows = 192)
View(GDP)
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", strip.white=T, skip=5, nrows = 192)
View(GDP)
# Read Education data
EDC <- read.table("edc.csv", header=T, sep=",", quote="\"")
View(EDC)
EDC <- read.table("edc.csv", header=T, sep=",", fileEncoding="latin1", quote="\"")
View(EDC)
View(GDP)
?merge
mergedData <- merge(GDP, EDC, by.x="V1", by.y="CountryCode")
View(mergedData)
# Read GDP file
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", strip.white=T, skip=5, nrows = 190)
# Read Education data
EDC <- read.table("edc.csv", header=T, sep=",", fileEncoding="latin1", quote="\"")
mergedData <- merge(GDP, EDC, by.x="V1", by.y="CountryCode")
str(mergedData)
View(GDP)
mergedData[order(mergedData$V2)]
mergedData[order(mergedData$V2), ]
head(mergedData[order(mergedData$V2), ])
library(plyr)
arrange(mergedData,desc(V2))
mergedData <- arrange(mergedData,desc(V2))
head(mergedData)
head(mergedData$Short.Name)
head(mergedData$Short.Name, 13)
View(EDC)
# Read GDP file
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", strip.white=T, skip=5, nrows = 190)
# Read Education data
EDC <- read.table("edc.csv", header=T, sep=",", fileEncoding="latin1", quote="\"")
# Merge both data
mergedData <- merge(GDP, EDC, by.x="V1", by.y="CountryCode")
View(mergedData)
mergedData <- arrange(mergedData,desc(V2))
View(mergedData)
fileUrl1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1, destfile = "./gdp.csv", method = "curl")
download.file(fileUrl2, destfile = "./edc.csv", method = "curl")
# Read GDP file
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", strip.white=T, skip=5, nrows = 190)
# Read Education data
EDC <- read.table("edc.csv", header=T, sep=",", fileEncoding="latin1", quote="\"")
# Merge both data
mergedData <- merge(GDP, EDC, by.x="V1", by.y="CountryCode")
# Sort
library(plyr)
mergedData <- arrange(mergedData,desc(V2))
View(GDP)
View(mergedData)
str(mergedData)
mergedData$V5 <- as.numeric(mergedData$V5)
str(mergedData)
View(mergedData)
mergedData$V5
?as.numeric
?read.table
View(GDP)
# Read GDP file
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", as.is = !stringsAsFactors,
strip.white=T, skip=5, nrows = 190)
# Read Education data
EDC <- read.table("edc.csv", header=T, sep=",", fileEncoding="latin1", quote="\"")
# Merge both data
mergedData <- merge(GDP, EDC, by.x="V1", by.y="CountryCode")
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", as.is = TRUE,
strip.white=T, skip=5, nrows = 190)
# Read Education data
EDC <- read.table("edc.csv", header=T, sep=",", fileEncoding="latin1", quote="\"")
# Merge both data
mergedData <- merge(GDP, EDC, by.x="V1", by.y="CountryCode")
mergedData <- arrange(mergedData,desc(V2))
View(GDP)
mergedData$V5 <- as.numeric(mergedData$V5)
View(GDP)
View(mergedData)
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", as.is = TRUE, dec = ".",
strip.white=T, skip=5, nrows = 190)
# Merge both data
mergedData <- merge(GDP, EDC, by.x="V1", by.y="CountryCode")
mergedData$V5 <- as.numeric(mergedData$V5)
# Read GDP file
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", as.is = TRUE, dec = ".",
strip.white=T, skip=5, nrows = 190)
# Merge both data
mergedData <- merge(GDP, EDC, by.x="V1", by.y="CountryCode")
mergedData$V5 <- as.numeric(gsub(",", "", mergedData$V5)
)
View(mergedData)
mergedData$V5[mergedData$Income.Group = "High income: nonOECD" ]
mergedData$V5[mergedData$Income.Group = "High income: nonOECD", ]
mergedData$V5[mergedData$Income.Group == "High income: nonOECD", ]
mergedData[mergedData$Income.Group == "High income: nonOECD", ]
mergedData[mergedData$Income.Group = "High income: nonOECD", ]
mergedData[mergedData$Income.Group == "High income: nonOECD", ]
OECD <- mergedData[mergedData$Income.Group == "High income: nonOECD", ]
ave(OECD$V5)
OECD$V5
mean(OECD$V5)
View(mergedData)
mergedData$V2 <- as.numeric(mergedData$V2))
mergedData$V2 <- as.numeric(mergedData$V2)
View(mergedData)
str(mergedData$V2)
OECD <- mergedData[mergedData$Income.Group == "High income: nonOECD", ]
mean(OECD$V2)
nonOECD <- mergedData[mergedData$Income.Group == "High income: nonOECD", ]
OECD <- mergedData[mergedData$Income.Group == "High income: OECD", ]
mean(OECD$V2)
mean(nonOECD$V2)
3 +4
a <- (6,8,3,9,0,2,5)
a <- c(6,8,3,9,0,2,5)
a
sum(a)
mean(a)
b <- rnorm(7)
b
plot(a,b)
setwd("~/DataScience/datasciencecoursera/4_exdata/proj1")
library(ggplot2)
# Read data frames
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
# Subset Baltimore (fips == "24510")
baltimore <- NEI[NEI$fips == "24510", ]
# Find vehicle emissions sources
vehicle <- SCC[grep("Vehicle",SCC$SCC.Level.Two), ] # First find coal
# Subset vehicle (SCC %in% vehicle)
vehicleCombustion <- baltimore[baltimore$SCC %in% vehicle$SCC, ]
# summarise the data by year
totalEm <- ddply(vehicleCombustion,c("year"),summarise, Emissions = sum(Emissions))
# Uggly plot that works :)
with(totalEm, plot(year, Emissions))
model <- lm(Emissions ~ year, totalEm)
abline(model)
title(main = "Vehicle Emissions in Baltimore by Year")
# Find coal combustion sources
coal <- SCC[grep("[Cc]oal",SCC$Short.Name), ] # First find coal
coal <- coal[grep("Comb",coal$Short.Name), ]  # then find combustion
# Subset Coal (SCC in coal)
coalCombution <- NEI[NEI$SCC %in% coal$SCC, ]
# summarise the data by year
totalEm <- ddply(coalCombution,c("year"),summarise, Emissions = sum(Emissions))
# Uggly plot that works :)
with(totalEm, plot(year, Emissions))
model <- lm(Emissions ~ year, totalEm)
abline(model)
title(main = "Coal Combustion Emissions by Year")
# Subset Baltimore (fips == "24510")
baltimore <- NEI[NEI$fips == "24510", ]
# summarise the data by year
totalEm <- ddply(baltimore,c("year","type"),summarise, Emissions = sum(Emissions))
# Plot graphics with baltimore data
qplot(year,Emissions,
data = totalEm,
color = type,
facets = . ~ type) +
theme(axis.text.x=element_text(angle=90)) +
geom_smooth(method="lm", se=FALSE)
# Read GDP file
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", as.is = TRUE, dec = ".",
strip.white=T, skip=5, nrows = 190)
# Read Education data
EDC <- read.table("edc.csv", header=T, sep=",", fileEncoding="latin1", quote="\"")
# Merge both data
mergedData <- merge(GDP, EDC, by.x="V1", by.y="CountryCode")
# Sort
library(plyr)
mergedData <- arrange(mergedData,desc(V2))
# Convert GDP to numeric
mergedData$V5 <- as.numeric(gsub(",", "", mergedData$V5))
mergedData$V2 <- as.numeric(mergedData$V2)
setwd("~/DataScience/datasciencecoursera/3_getdata/q3")
# Read GDP file
GDP <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", as.is = TRUE, dec = ".",
strip.white=T, skip=5, nrows = 190)
# Read Education data
EDC <- read.table("edc.csv", header=T, sep=",", fileEncoding="latin1", quote="\"")
# Merge both data
mergedData <- merge(GDP, EDC, by.x="V1", by.y="CountryCode")
# Sort
library(plyr)
mergedData <- arrange(mergedData,desc(V2))
# Convert GDP to numeric
mergedData$V5 <- as.numeric(gsub(",", "", mergedData$V5))
mergedData$V2 <- as.numeric(mergedData$V2)
?cut
quantile(mergedData$V2)
mergedData$Group <- cut(mergedData$V2,breaks=quantile(mergedData$V2))
table(mergedData$Group)
mergedData$Group <- cut(mergedData$V2,g=5)
library(Hmisc)
install.packages(Hmisc)
install.packages("Hmisc")
library(Hmisc)
mergedData$Group <- cut(mergedData$V2,g=5)
mergedData$Group <- cut2(mergedData$V2,g=5)
table(mergedData$Group)
table(mergedData$Group,mergedData$Income.Group)
object.size(numeric())
object.size(numeric()) * 1304287 * 28
object.size(numeric()) * 1304287 * 28 /1024/1024
8 * 1304287 * 28 /1024/1024
8 * 1304287 * 28
8 * 1304287 * 28 / 1024
8 * 1304287 * 28 / 1024 / 1024
setwd("~/DataScience/datasciencecoursera/3_getdata/q4")
# Download file
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,"./hid.csv", method="curl")
hid <- read.table("./hid.csv")
View(hid)
hid <- read.table("./hid.csv", sep=",")
View(hid)
hid <- read.table("./hid.csv", sep=",", header=T)
View(hid)
names(hid)
strsplit(names(hid))
strsplit(names(hid),"wgtp")
splitnames<-strsplit(names(hid),"wgtp")
splitnames[[123]]
## Q2
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl,"./gdp.csv", method="curl")
gdp <- read.table("./gdp.csv", sep=",", header=T)
gdp <- read.table("./gdp.csv", header=T)
gdp <- read.table("./gdp.csv")
gdp <- read.table("./gdp.csv", sep=",", skip=5)
View(gdp)
gdp <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", as.is = TRUE, dec = ".",
strip.white=T, skip=5)
View(gdp)
gdp <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", as.is = TRUE, dec = ".",
strip.white=T, skip=5, nrows = 231)
View(gdp)
gdp <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", as.is = TRUE, dec = ".",
strip.white=T, skip=5, nrows = 190)
View(gdp)
# Strip commas
gdp$V5 <- as.numeric(gsub(",", "", gdp$V5))
View(gdp)
mean(gdp$V5)
ave(gdp$V5)
mean(gdp$V5)
grep("^United",gdp$V4)
count(grep("^United",gdp$V4))
grep("^United",gdp$V4)
mean(gdp$V5)
fileUrl1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1,"./gdp.csv", method="curl")
download.file(fileUrl2,"./edu.csv", method="curl")
# read GDO table
gdp <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", as.is = TRUE, dec = ".",
strip.white=T, skip=5, nrows = 190)
# Read Education data
edu <- read.table("edc.csv", header=T, sep=",", fileEncoding="latin1", quote="\"")
# read GDO table
gdp <- read.table("gdp.csv", header=F, sep=",", fileEncoding="latin1",
quote="\"", as.is = TRUE, dec = ".",
strip.white=T, skip=5, nrows = 190)
# Read Education data
edu <- read.table("edu.csv", header=T, sep=",", fileEncoding="latin1", quote="\"")
View(edu)
names(edu)
names(gdp)
str(gdp)
# Match two files
matchedDF <- merge(gdp, edu, by.x="V1", by.y="CountryCode")
names(matchedDF)
head(gdp)
head(edu)
matchedDF$Special.Notes
matchedDF$Special.Notes[grep("Fiscal year end",matchedDF$Special.Notes), ]
matchedDF$Special.Notes[grep("Fiscal year end",matchedDF$Special.Notes), ]
grep("Fiscal year end",matchedDF$Special.Notes)
?grep
grep("Fiscal year end",matchedDF$Special.Notes, value=T)
fiscal <- grep("Fiscal year end",matchedDF$Special.Notes, value=T)
fiscalJune <- grep("[Jj]une",fiscal, value=T)
fiscalJune
fiscalJune <- grepl("[Jj]une",fiscal, value=T)
fiscalJune <- grepl("[Jj]une",fiscal)
fiscalJune
sum(fiscalJune)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
str(amzn)
sampleTimes
str(sampleTimes)
sampleTimes[year(sampleTimes) == "2012"]
?date
libray(lubridate)
library(lubridate)
sampleTimes[year(sampleTimes) == "2012"]
sampleTimes[year(sampleTimes) == "2012",]
sampleTimes[year(sampleTimes) == "2012"]
sampleTimes[year(sampleTimes) = "2012"]
sampleTimes[year(sampleTimes) = "2012", ]
sampleTimes[year(sampleTimes) == "2012", ]
sampleTimes[year(sampleTimes) == "2012"]
count(sampleTimes[year(sampleTimes) == "2012"])
sampleTimes[year(sampleTimes) == "2012"]
size(sampleTimes[year(sampleTimes) == "2012"])
length(sampleTimes[year(sampleTimes) == "2012"])
amzn2012 <- sampleTimes[year(sampleTimes) == "2012"]
?lubridate
amzn2012
amzn2012[wday(amazn)=="02"]
amzn2012[wday(amzn2012)=="02"]
wday(amzn2012)
wday(amzn2012) == "2"
sum(wday(amzn2012) == "2")
