legend("topright",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright",
pch = 20
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Create legend
legend("topright",
pch = 20,
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright",
pch = 1,
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph & plot sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Create legend
legend("topright",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright",
pch = 20,
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Load necessary Library
library(lubridate)
## Function to get data from download or local filesystem
getdata <- function(filename = "VAZIO")  {
# Download data if its not present
if (!file.exists(filename)) {
# Dataset URL
dataURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
# Create temporary file for zip download
zipTemp <- tempfile()
# Save data on local filesystem
download.file(dataURL, zipTemp, method="curl")
# Open the zip file
data <- read.table(unz(zipTemp, "household_power_consumption.txt"),
sep = ";",
na.string = "?",
header = TRUE)
# Delete temp file
unlink(zipTemp)
} else {
# File found locally. Load it!
data <- read.table("household_power_consumption.txt",
sep = ";",
na.string = "?",
header = TRUE)
}
# Fix the date format
#dados$Date <- as.POSIXct(strptime(dados$Date, "%d/%m/%Y"))
data$DateTime <-dmy_hms(paste(data$Date, data$Time, sep=" "))
data$Date <-dmy(data$Date)
#data$Time <-hms(data$Time)
# Return the data
data[data$Date == ymd("2007-02-01") | data$Date == ymd("2007-02-02"), ]
#data
}
# Loading data
housedata <- getdata("household_power_consumption.txt")
# Draw graph & plot sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Create legend
legend("topright",
pch = 20,
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Create PNG file
dev.copy(png, file = "plot3.png", width = 480, height = 480)
dev.off()
?legend
legend("topright",
pch = "-",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright",
pch = "---",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright",
pch = "_",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright",
pch = "__",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright",
pch = "____",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright",
pch = "_",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph & plot sub_metering_1
png(file = "plot3.png", width = 480, height = 480)
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Create PNG file
dev.off()
## Load necessary Library
library(lubridate)
## Function to get data from download or local filesystem
getdata <- function(filename = "VAZIO")  {
# Download data if its not present
if (!file.exists(filename)) {
# Dataset URL
dataURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
# Create temporary file for zip download
zipTemp <- tempfile()
# Save data on local filesystem
download.file(dataURL, zipTemp, method="curl")
# Open the zip file
data <- read.table(unz(zipTemp, "household_power_consumption.txt"),
sep = ";",
na.string = "?",
header = TRUE)
# Delete temp file
unlink(zipTemp)
} else {
# File found locally. Load it!
data <- read.table("household_power_consumption.txt",
sep = ";",
na.string = "?",
header = TRUE)
}
# Fix the date format
#dados$Date <- as.POSIXct(strptime(dados$Date, "%d/%m/%Y"))
data$DateTime <-dmy_hms(paste(data$Date, data$Time, sep=" "))
data$Date <-dmy(data$Date)
#data$Time <-hms(data$Time)
# Return the data
data[data$Date == ymd("2007-02-01") | data$Date == ymd("2007-02-02"), ]
#data
}
# Loading data
housedata <- getdata("household_power_consumption.txt")
# Draw graph & plot sub_metering_1
png(file = "plot3.png", width = 480, height = 480)
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Create PNG file
dev.off()
# Defining canvas for multiple graphs
par(mfrow = c(2,2))
# Draw graph 1
plot(housedata$DateTime, housedata$Global_active_power,
type = "l",
ylab = "Global Active Power (kilowatts)",
xlab = "")
# Draw graph 2
plot(housedata$DateTime, housedata$Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime")
# Draw graph 3: Sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
xlab = "datetime")
# Defining canvas for multiple graphs
par(mfrow = c(2,2))
# Draw graph 1
plot(housedata$DateTime, housedata$Global_active_power,
type = "l",
ylab = "Global Active Power (kilowatts)",
xlab = "")
# Draw graph 2
plot(housedata$DateTime, housedata$Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime")
# Draw graph 3: Sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
# Defining canvas for multiple graphs
par(mfrow = c(2,2))
par(mar = c(2,2,2,2))
# Draw graph 1
plot(housedata$DateTime, housedata$Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = "")
# Draw graph 2
plot(housedata$DateTime, housedata$Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime")
# Draw graph 3: Sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
# Defining canvas for multiple graphs
par(mfrow = c(2,2))
par(mar = c(2,3,2,2))
# Draw graph 1
plot(housedata$DateTime, housedata$Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = "")
# Draw graph 2
plot(housedata$DateTime, housedata$Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime")
# Draw graph 3: Sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
# Defining canvas for multiple graphs
par(mfrow = c(2,2))
par(mar = c(2,4,2,2))
# Draw graph 1
plot(housedata$DateTime, housedata$Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = "")
# Draw graph 2
plot(housedata$DateTime, housedata$Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime")
# Draw graph 3: Sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
# Defining canvas for multiple graphs
par(mfrow = c(2,2))
par(mar = c(2,4,2,2))
# Draw graph 1
plot(housedata$DateTime, housedata$Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = "")
# Draw graph 2
plot(housedata$DateTime, housedata$Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime")
# Draw graph 3: Sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
## Load necessary Library
library(lubridate)
## Function to get data from download or local filesystem
getdata <- function(filename = "VAZIO")  {
# Download data if its not present
if (!file.exists(filename)) {
# Dataset URL
dataURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
# Create temporary file for zip download
zipTemp <- tempfile()
# Save data on local filesystem
download.file(dataURL, zipTemp, method="curl")
# Open the zip file
data <- read.table(unz(zipTemp, "household_power_consumption.txt"),
sep = ";",
na.string = "?",
header = TRUE)
# Delete temp file
unlink(zipTemp)
} else {
# File found locally. Load it!
data <- read.table("household_power_consumption.txt",
sep = ";",
na.string = "?",
header = TRUE)
}
# Fix the date format
#dados$Date <- as.POSIXct(strptime(dados$Date, "%d/%m/%Y"))
data$DateTime <-dmy_hms(paste(data$Date, data$Time, sep=" "))
data$Date <-dmy(data$Date)
#data$Time <-hms(data$Time)
# Return the data
data[data$Date == ymd("2007-02-01") | data$Date == ymd("2007-02-02"), ]
#data
}
# Loading data
housedata <- getdata("household_power_consumption.txt")
# Create PNG file
png(file = "plot4.png", width = 480, height = 480)
# Defining canvas for multiple graphs
par(mfrow = c(2,2))
par(mar = c(2,4,2,2))
# Draw graph 1
plot(housedata$DateTime, housedata$Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = "")
# Draw graph 2
plot(housedata$DateTime, housedata$Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime")
# Draw graph 3: Sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
# Create PNG file
dev.off()
install.library('RMySQL')
library.install('RMySQL')
install.packages('RMySQL')
install.packages('RMySQL', type="source")
library('RMySQL')
db <- dbConnect(MySQL,user="genome",)
db <- dbConnect(MySQL,user="genome", host="genome-mysql.cse.ucsc.edu")
db <- dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
dbDisconnect(db)
result
count(result)
head(result)
source('http://bioconductor.org/biocLite.R')
biocLite("rhdf5")
install.packages('sqldf')
setwd("~/DataScience/datasciencecoursera/3_getdata/q2")
acs <- read.table("getdata_data_ss06pid.csv", sep=",", header=T)
head(adc)
head(ads)
head(acs)
