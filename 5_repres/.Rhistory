data$DateTime <-dmy_hms(paste(data$Date, data$Time, sep=" "))
data$Date <-dmy(data$Date)
#data$Time <-hms(data$Time)
# Return the data
data[data$Date == ymd("2007-02-01") | data$Date == ymd("2007-02-02"), ]
#data
}
# Loading data
housedata <- getdata("household_power_consumption.txt")
# Create PNG file
png(file = "plot4.png", width = 480, height = 480)
# Defining canvas for multiple graphs
par(mfrow = c(2,2))
par(mar = c(2,4,2,2))
# Draw graph 1
plot(housedata$DateTime, housedata$Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = "")
# Draw graph 2
plot(housedata$DateTime, housedata$Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime")
# Draw graph 3: Sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
# Create PNG file
dev.off()
install.library('RMySQL')
library.install('RMySQL')
install.packages('RMySQL')
install.packages('RMySQL', type="source")
library('RMySQL')
db <- dbConnect(MySQL,user="genome",)
db <- dbConnect(MySQL,user="genome", host="genome-mysql.cse.ucsc.edu")
db <- dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
dbDisconnect(db)
result
count(result)
head(result)
source('http://bioconductor.org/biocLite.R')
biocLite("rhdf5")
?qunif
qunif()
qunif(1,0,1)
qunif(1,0,.75)
### Find the center of mass of the bars
```{r ,fig.height=3.5,fig.width=8, fig.align='center', echo = FALSE}
library(UsingR); data(galton)
par(mfrow=c(1,2))
hist(galton$child,col="blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
```
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
with(temp, plot(X,Prob))
table(temp)
plot(temp)
temp[,1]
temp[,]
temp[,2]
a <- c(temp[,1],temp[,2],temp[,3],temp[,4])
a
a <- temp[,1]
a <- rbind(temp[,2])
a <- rbind(temp[,3])
a <- rbind(temp[,4])
a
a <- temp[,1]
a <- rbind(a,temp[,2])
a <- rbind(a,temp[,3])
a <- rbind(a,temp[,4])
a
plot(a$)
plot(a)
quantile()
quantile(temp)
x*p
sum(x*p)
sum(x*p)/4
(.75*.30)/(.75*.30+(1-.52)*(1-.3))
choose(10,9)
choose(10,9)*.5
choose(10,9)*0.5
choose(10,9)*0.5^9*(0.5)^1
pbinom(9, size=10, prob=.5, lower.tail = F)
qnorm(.75, mean = 1020, sd=50)
ppois(40, lambda = 9 * 5)
qunif()
qunif(0.75,1)
?qunif
qunif(0.75,0,1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
sum(x)
x * p
sum(X)
sum(x)
sum(x) / (x*p)
sum(x) / sum(x*p)
(0.75 * 0.3) / (0.75*0.3 + 0.48*0.7)
rnorm
rnorm(10)
var
var(rnorm(10))
var(rnorm(200))
var(rnorm(20))
var(rnorm(20))
var(rnorm(20))
var(rnorm(20))
var(rnorm(20))
var(rnorm(20))
nosim <- 1000
n <- 10
rnorm(nosim*n)
matrix(rnorm(nosim*n),nosim)
apply(matrix(rnorm(nosim*n),nosim),1,mean)
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
nosim <- 10000
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
n <- 100
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
n <- 1000
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
nosim <- 100000
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
qnorm(0.95,1100,75)
1 - qnorm(0.95,1100,75)
1 - pnorm(0.95,1100,75)
pnorm(0.95,1100,75)
pnorm(1200,1100,75)
pnorm(10,1100,75)
ppois(10,lambda = 5*3)
?ppois
ppois(c(14,16),lambda = 15)
pnorm(10,1100,75)
rnorm
rnorm(1)
rnorm(100,1100,75)
?rnorm
avg(rnorm(100,1100,75))
mu <- mean(rnorm(100,1100,75))
mu
data <- rnorm(100,1100,75)
data
mu <- mean(data)
sig <- std(data)
sd
?sd
sig <- sd(data)
sd
sig
mu
rnorm(100,1100,75)
qnorm(0.95,mu,sig)
qnorm(0.95,1100,sig)
qnorm(0.95,1100,75)
qnorm(0.95,1100,75/sqrt(100))
pbinom(3,size=5,prob=0.5,lower.tail=F)
ppois(14, 15)
p14 <- ppois(14, 15)
p16 <- ppois(16, 15, lower.tail=T)
p16
p16 <- ppois(16, 15)
p16
p16 - p14
qnorm(0.95,15,10/sqrt(100))
p14 <- qnorm((14-15)/10,15,10/sqrt(100))
q14 <- (14-15)/10
q14
q16 <- (16-15)/10
a16
q16
hist(rexp(1000,lambda))
lambda = 0.2
hist(rexp(1000,lambda))
rexp(1000,lambda)
hist(rexp(1000,lambda))
plot(rexp(1000,lambda))
mns = NULL
for (i in 1:1000) mns = c(mns,mean(rexp(40,lambda)))
hist(mns)
hist(runif(1000))
par(mar = rep(2, 4))
hist(runif(1000))
hist(rexp(1000,lambda))
mns = NULL
for (i in 1:1000) mns = c(mns,mean(rexp(40,lambda)))
hist(mns)
rep(c(10, 20, 30),10)
factor(rep(c(10, 20, 30), rep(100, 3))))
factor(rep(c(10, 20, 30), rep(100, 3)))
factor(rep(c(exp, avgexp), rep(100, 3)))
factor(rep(c(1, 2), rep(100, 3)))
factor(rep(c(1, 2), rep(100, 2)))
factor(rep(c('exp','avgexp'), rep(100, 2)))
factor(rep(c('exp','avgexp'), rep(1000, 2)))
dat <- data.frame(
x = c(exp1000,mex),
size = factor(rep(c('exp','avgexp'), rep(1000, 2)))
)
nosim <- 1000
lambda <- 0.2
exp1000 <- rexp(nosim,lambda)
# Run 1000 simulation of average of 40 exponentials
mex = NULL
for (i in 1:nosim) mex = c(mex,mean(rexp(40,lambda)))
dat <- data.frame(
x = c(exp1000,mex),
size = factor(rep(c('exp','avgexp'), rep(nosim, 2)))
)
View(dat)
g <- ggplot(dat, aes(x = x, fill = type)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
library(ggplot)
library(ggplot2)
g <- ggplot(dat, aes(x = x, fill = type)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
dat <- data.frame(
x = c(exp1000,mex),
t = factor(rep(c('exp','avgexp'), rep(nosim, 2)))
)
top(dat)
cat(dat)
tail(dat)
g <- ggplot(dat, aes(x = x, fill = t)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
g <- ggplot(dat, aes(x = x, fill = t)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g
g <- g + stat_function(fun = dnorm, size = 2)
g
g + facet_grid(. ~ size)
g
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ t)
g <- ggplot(dat, aes(x = x, fill = t)) + geom_histogram(binwidth=.3, colour = "black")
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ t)
ls
n <- 9
n <- 9
sd <- 30
Xbar <- 110
Xbar <- 1100
Xbar + c(-1,1) * qt(.975,n-1) * sd / sqrt(n)
Xbar <- -2
del(sd)
rm(sd)
sd <- (-Xbar*sqrt(n))/qt(.975,n-1)
sd
n <- 10
MWTn <- 3
MWTo <- 5
VARn <- 0.6
VARo <- 0.68
Sp <- (VARn+VARo)/2
(3-5) + c(-1,1) * qt(.975,18) * Sp * (1/10) ^0.5
Sp <- (VARn+VARo)/2
(5-3) + c(-1,1) * qt(.975,18) * Sp * (1/10) ^0.5
(5-3) + c(-1,1) * qt(.975,18) * Sp * (1/5) ^0.5
(5-3) + c(-1,1) * qt(.975,18) * Sp * (2/10) ^0.5
Sp <- (VARn+VARo)/2
(3-5) + c(-1,1) * qt(.975,18) * Sp * (2/10) ^0.5
(5-3) + c(-1,1) * qt(.975,18) * Sp * (2/10) ^0.5
Sp <- sqrt((VARn+VARo)/2)
(5-3) + c(-1,1) * qt(.975,18) * Sp * (2/10) ^0.5
(3-5) + c(-1,1) * qt(.975,18) * Sp * (2/10) ^0.5
H0 <- 6
SD0 <- 2
rm(SD0)
Sd0 <- 2
C <- H0 - Sd0 * 1.645
1.645 * Sd0
C <- H0 - Sd0 * qt(0.975,99)
C
qt(0.975,99)
Sp <- sqrt((-3+1)/2)
Sp <- sqrt((1-3)/2)
sqrt(2/2)
sp <-1
Sp <- 1
rm(sp)
rm(Sd0,H0,C)
(-3-1) + c(-1,1) * qt(.9,18) * Sp * (2/9) ^0.5
Sp <- (1.5Ë†2+1.8Ë†2)/2
Sp <- (1.5^2+1.8^2)/2
Sp
(-3-1) + c(-1,1) * qt(.9,18) * Sp * (2/9) ^0.5
Sp <- sqrt((1.5^2+1.8^2)/2)
(-3-1) + c(-1,1) * qt(.9,18) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.9,17) * Sp * (2/9) ^0.5
Sp <- sqrt(((1.5^2)+(1.8^2))/2)
(-3-1) + c(-1,1) * qt(.9,17) * Sp * (2/9) ^0.5
Sp <- sqrt((8*(1.5^2)+8*(1.8^2))/(16)
;
Sp <- sqrt((8*(1.5^2)+8*(1.8^2))/(16))
(-3-1) + c(-1,1) * qt(.9,17) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.975,17) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.975,16) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^ 0.5
(-1-3) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^ 0.5
(-3-1) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^ 0.5
library(manipulate)
setwd("~/DataScience/datasciencecoursera/5_repres")
file <- 'repdata_data_StormData.csv.bz2'
data <- read.csv(bzfile(file, 'repdata_data_StormData.csv'))
# Fix date format and get the last 5 years
data$BGN_DATE <- as.POSIXct(data$BGN_DATE, format="%m/%d/%Y %H:%M:%S")
data <- data[data$BGN_DATE > "2006-11-30", ]
# Keep only the columns needed
data <- data[,c("BGN_DATE","EVTYPE","FATALITIES","INJURIES",
"PROPDMG","CROPDMG")]
data <- data[!is.na(data$EVTYPE), ]
dataBKP <- data
sumData = data.frame()
for (event in unique(data$EVTYPE)) {
tDF <- df("EVTYPE" = event,
"FATALITIES" = sum(data$FATALITIES),
"INJURIES" = sum(data$INJURIES),
"PROPDMG" = sum(data$PROPDMG),
"CROPDMG" = sum(data$CROPDMG))
sumData <- rbind(sumData,tDF)
}
sumData = data.frame()
for (event in unique(data$EVTYPE)) {
tDF <- data.frame("EVTYPE" = event,
"FATALITIES" = sum(data$FATALITIES),
"INJURIES" = sum(data$INJURIES),
"PROPDMG" = sum(data$PROPDMG),
"CROPDMG" = sum(data$CROPDMG))
sumData <- rbind(sumData,tDF)
}
View(sumData)
sumData = data.frame()
for (event in unique(data$EVTYPE)) {
tDF <- data.frame("EVTYPE" = event,
"FATALITIES" = sum(data$FATALITIES[data$EVTYPE == event, ]),
"INJURIES" = sum(data$INJURIES),
"PROPDMG" = sum(data$PROPDMG),
"CROPDMG" = sum(data$CROPDMG))
sumData <- rbind(sumData,tDF)
}
sumData = data.frame()
for (event in unique(data$EVTYPE)) {
tDF <- data.frame("EVTYPE" = event,
"FATALITIES" = sum(data$FATALITIES[data$EVTYPE == event]),
"INJURIES" = sum(data$INJURIES),
"PROPDMG" = sum(data$PROPDMG),
"CROPDMG" = sum(data$CROPDMG))
sumData <- rbind(sumData,tDF)
}
View(sumData)
sumData = data.frame()
for (event in unique(data$EVTYPE)) {
tDF <- data.frame("EVTYPE" = event,
"FATALITIES" = sum(data$FATALITIES[data$EVTYPE == event]),
"INJURIES" = sum(data$INJURIES[data$EVTYPE == event]),
"PROPDMG" = sum(data$PROPDMG[data$EVTYPE == event]),
"CROPDMG" = sum(data$CROPDMG[data$EVTYPE == event]))
sumData <- rbind(sumData,tDF)
}
View(sumData)
sumData$HEALTH <- sumData$FATALITIES + sumData$INJURIES
sumData$ECONOMIC <- sumData$PROPDMG + sumData$CROPDMG
View(sumData)
sumData = sumData / 5
View(sumData)
sumData[2..6] / 5
sumData[2:6] / 5
sumData = data.frame()
for (event in unique(data$EVTYPE)) {
tDF <- data.frame("EVTYPE" = event,
"FATALITIES" = sum(data$FATALITIES[data$EVTYPE == event]),
"INJURIES" = sum(data$INJURIES[data$EVTYPE == event]),
"PROPDMG" = sum(data$PROPDMG[data$EVTYPE == event]),
"CROPDMG" = sum(data$CROPDMG[data$EVTYPE == event]))
sumData <- rbind(sumData,tDF)
}
sumData$HEALTH <- sumData$FATALITIES + sumData$INJURIES
sumData$ECONOMIC <- sumData$PROPDMG + sumData$CROPDMG
sumData[2:6] / 5
sumData[2:6] <- sumData[2:6] / 5
View(sumData)
sumData[2:6] <- sumData[2:6] / 5
View(sumData)
sumData = data.frame()
for (event in unique(data$EVTYPE)) {
tDF <- data.frame("EVTYPE" = event,
"FATALITIES" = sum(data$FATALITIES[data$EVTYPE == event]),
"INJURIES" = sum(data$INJURIES[data$EVTYPE == event]),
"PROPDMG" = sum(data$PROPDMG[data$EVTYPE == event]),
"CROPDMG" = sum(data$CROPDMG[data$EVTYPE == event]))
sumData <- rbind(sumData,tDF)
}
View(sumData)
sumData$HEALTH <- sumData$FATALITIES + sumData$INJURIES
sumData$ECONOMIC <- sumData$PROPDMG + sumData$CROPDMG
sumData[2:6] <- sumData[2:6] / 5
View(sumData)
sumData[order(sumData$HEALTH)]
sumData[order(sumData$HEALTH),]
View(sumData[order(sumData$HEALTH),])
?order
View(sumData[order(sumData$HEALTH, decreasing = T),])
head(sumData[order(sumData$HEALTH, decreasing = T),],5)
head(sumData[order(sumData$ECONOMIC, decreasing = T),],5)
head(sumData[order(sumData$HEALTH, decreasing = T),],5)
head(sumData[order(sumData$HEALTH, decreasing = T),],5)[1:3]
head(sumData[order(sumData$HEALTH, decreasing = T),],5)[1,4:5]
head(sumData[order(sumData$HEALTH, decreasing = T),],5)[1,4,5]
head(sumData[order(sumData$HEALTH, decreasing = T),],5)[,c(1,4,5)]
toupper(sumData)
length(sumData$EVTYPE)
length(toupper(sumData$EVTYPE)
)
head(sumData[order(sumData$HEALTH, decreasing = T),],5)[1:3]
head(sumData[order(sumData$HEALTH, decreasing = T),],5)[,c(1,6)]
hist(head(sumData[order(sumData$HEALTH, decreasing = T),],5)[,c(1,6)])
h <- head(sumData[order(sumData$HEALTH, decreasing = T),],5)[,c(1,6)]
hist(h)
library(ggplot2)
# Create better levels name
g <- ggplot(sumData, aes(x = sumData$EVTYPE,
y = sumData$HEALTH))
g <- g + geom_point()
g <- g + labs(x = "Dose (mg)", y = "Length (u)")
#g <- g + guides(fill=guide_legend(title=NULL))
#g <- g + scale_fill_manual(name="Delivery Method")
g
g <- ggplot(sumData, aes(x = sumData$EVTYPE,
y = sumData$HEALTH))
g <- g + geom_point()
#g <- g + labs(x = "Dose (mg)", y = "Length (u)")
#g <- g + guides(fill=guide_legend(title=NULL))
#g <- g + scale_fill_manual(name="Delivery Method")
g
g <- ggplot(h, aes(x = h$EVTYPE,
y = h$HEALTH))
g <- g + geom_point()
g
g <- ggplot(h, aes(x = h$EVTYPE,
y = h$HEALTH))
g <- g + geom_bar()
g
g <- ggplot(h, aes(x = h$EVTYPE,
y = h$HEALTH))
g <- g + geom_histogram()
g
g <- ggplot(h, aes(x = h$EVTYPE,
y = h$HEALTH))
g <- g + geom_bar(stat="identity")
g
g <- ggplot(h, aes(x = h$EVTYPE, y = h$HEALTH, color=h$EVTYPE))
g <- g + geom_bar(stat="identity")
g
g <- ggplot(h, aes(x = h$EVTYPE, y = h$HEALTH))
g <- g + geom_bar(stat="identity")
g <- g + labs(x = "Events", y = "Casulties (Injuries + Fatalities")
g
h <- head(sumData[order(sumData$HEALTH, decreasing = T),],5)[,c(1,6)]
g <- ggplot(h, aes(x = h$EVTYPE, y = h$HEALTH))
g <- g + geom_bar(stat="identity")
g <- g + labs(x = "Events", y = "Casulties (Injuries + Fatalities")
g
h <- head(sumData[order(sumData$HEALTH, decreasing = T),],5)[,c(1,7)]
library(ggplot2)
h <- head(sumData[order(sumData$HEALTH, decreasing = T),],5)[,c(1,7)]
g <- ggplot(h, aes(x = h$EVTYPE, y = h$ECONOMIC))
g <- g + geom_bar(stat="identity")
g <- g + labs(x = "Events", y = "Economic Impact")
g
library(ggplot2)
h <- head(sumData[order(sumData$ECONOMIC, decreasing = T),],5)[,c(1,7)]
g <- ggplot(h, aes(x = h$EVTYPE, y = h$ECONOMIC))
g <- g + geom_bar(stat="identity")
g <- g + labs(x = "Events", y = "Economic Impact")
g
