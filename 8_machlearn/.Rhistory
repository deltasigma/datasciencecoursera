col = c("black","red","blue"),
bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
# Create PNG file
dev.off()
install.library('RMySQL')
library.install('RMySQL')
install.packages('RMySQL')
install.packages('RMySQL', type="source")
library('RMySQL')
db <- dbConnect(MySQL,user="genome",)
db <- dbConnect(MySQL,user="genome", host="genome-mysql.cse.ucsc.edu")
db <- dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
dbDisconnect(db)
result
count(result)
head(result)
source('http://bioconductor.org/biocLite.R')
biocLite("rhdf5")
?qunif
qunif()
qunif(1,0,1)
qunif(1,0,.75)
### Find the center of mass of the bars
```{r ,fig.height=3.5,fig.width=8, fig.align='center', echo = FALSE}
library(UsingR); data(galton)
par(mfrow=c(1,2))
hist(galton$child,col="blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
```
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
with(temp, plot(X,Prob))
table(temp)
plot(temp)
temp[,1]
temp[,]
temp[,2]
a <- c(temp[,1],temp[,2],temp[,3],temp[,4])
a
a <- temp[,1]
a <- rbind(temp[,2])
a <- rbind(temp[,3])
a <- rbind(temp[,4])
a
a <- temp[,1]
a <- rbind(a,temp[,2])
a <- rbind(a,temp[,3])
a <- rbind(a,temp[,4])
a
plot(a$)
plot(a)
quantile()
quantile(temp)
x*p
sum(x*p)
sum(x*p)/4
(.75*.30)/(.75*.30+(1-.52)*(1-.3))
choose(10,9)
choose(10,9)*.5
choose(10,9)*0.5
choose(10,9)*0.5^9*(0.5)^1
pbinom(9, size=10, prob=.5, lower.tail = F)
qnorm(.75, mean = 1020, sd=50)
ppois(40, lambda = 9 * 5)
qunif()
qunif(0.75,1)
?qunif
qunif(0.75,0,1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
sum(x)
x * p
sum(X)
sum(x)
sum(x) / (x*p)
sum(x) / sum(x*p)
(0.75 * 0.3) / (0.75*0.3 + 0.48*0.7)
rnorm
rnorm(10)
var
var(rnorm(10))
var(rnorm(200))
var(rnorm(20))
var(rnorm(20))
var(rnorm(20))
var(rnorm(20))
var(rnorm(20))
var(rnorm(20))
nosim <- 1000
n <- 10
rnorm(nosim*n)
matrix(rnorm(nosim*n),nosim)
apply(matrix(rnorm(nosim*n),nosim),1,mean)
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
nosim <- 10000
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
n <- 100
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
n <- 1000
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
nosim <- 100000
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
qnorm(0.95,1100,75)
1 - qnorm(0.95,1100,75)
1 - pnorm(0.95,1100,75)
pnorm(0.95,1100,75)
pnorm(1200,1100,75)
pnorm(10,1100,75)
ppois(10,lambda = 5*3)
?ppois
ppois(c(14,16),lambda = 15)
pnorm(10,1100,75)
rnorm
rnorm(1)
rnorm(100,1100,75)
?rnorm
avg(rnorm(100,1100,75))
mu <- mean(rnorm(100,1100,75))
mu
data <- rnorm(100,1100,75)
data
mu <- mean(data)
sig <- std(data)
sd
?sd
sig <- sd(data)
sd
sig
mu
rnorm(100,1100,75)
qnorm(0.95,mu,sig)
qnorm(0.95,1100,sig)
qnorm(0.95,1100,75)
qnorm(0.95,1100,75/sqrt(100))
pbinom(3,size=5,prob=0.5,lower.tail=F)
ppois(14, 15)
p14 <- ppois(14, 15)
p16 <- ppois(16, 15, lower.tail=T)
p16
p16 <- ppois(16, 15)
p16
p16 - p14
qnorm(0.95,15,10/sqrt(100))
p14 <- qnorm((14-15)/10,15,10/sqrt(100))
q14 <- (14-15)/10
q14
q16 <- (16-15)/10
a16
q16
hist(rexp(1000,lambda))
lambda = 0.2
hist(rexp(1000,lambda))
rexp(1000,lambda)
hist(rexp(1000,lambda))
plot(rexp(1000,lambda))
mns = NULL
for (i in 1:1000) mns = c(mns,mean(rexp(40,lambda)))
hist(mns)
hist(runif(1000))
par(mar = rep(2, 4))
hist(runif(1000))
hist(rexp(1000,lambda))
mns = NULL
for (i in 1:1000) mns = c(mns,mean(rexp(40,lambda)))
hist(mns)
rep(c(10, 20, 30),10)
factor(rep(c(10, 20, 30), rep(100, 3))))
factor(rep(c(10, 20, 30), rep(100, 3)))
factor(rep(c(exp, avgexp), rep(100, 3)))
factor(rep(c(1, 2), rep(100, 3)))
factor(rep(c(1, 2), rep(100, 2)))
factor(rep(c('exp','avgexp'), rep(100, 2)))
factor(rep(c('exp','avgexp'), rep(1000, 2)))
dat <- data.frame(
x = c(exp1000,mex),
size = factor(rep(c('exp','avgexp'), rep(1000, 2)))
)
nosim <- 1000
lambda <- 0.2
exp1000 <- rexp(nosim,lambda)
# Run 1000 simulation of average of 40 exponentials
mex = NULL
for (i in 1:nosim) mex = c(mex,mean(rexp(40,lambda)))
dat <- data.frame(
x = c(exp1000,mex),
size = factor(rep(c('exp','avgexp'), rep(nosim, 2)))
)
View(dat)
g <- ggplot(dat, aes(x = x, fill = type)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
library(ggplot)
library(ggplot2)
g <- ggplot(dat, aes(x = x, fill = type)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
dat <- data.frame(
x = c(exp1000,mex),
t = factor(rep(c('exp','avgexp'), rep(nosim, 2)))
)
top(dat)
cat(dat)
tail(dat)
g <- ggplot(dat, aes(x = x, fill = t)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
g <- ggplot(dat, aes(x = x, fill = t)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g
g <- g + stat_function(fun = dnorm, size = 2)
g
g + facet_grid(. ~ size)
g
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ t)
g <- ggplot(dat, aes(x = x, fill = t)) + geom_histogram(binwidth=.3, colour = "black")
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ t)
ls
n <- 9
n <- 9
sd <- 30
Xbar <- 110
Xbar <- 1100
Xbar + c(-1,1) * qt(.975,n-1) * sd / sqrt(n)
Xbar <- -2
del(sd)
rm(sd)
sd <- (-Xbar*sqrt(n))/qt(.975,n-1)
sd
n <- 10
MWTn <- 3
MWTo <- 5
VARn <- 0.6
VARo <- 0.68
Sp <- (VARn+VARo)/2
(3-5) + c(-1,1) * qt(.975,18) * Sp * (1/10) ^0.5
Sp <- (VARn+VARo)/2
(5-3) + c(-1,1) * qt(.975,18) * Sp * (1/10) ^0.5
(5-3) + c(-1,1) * qt(.975,18) * Sp * (1/5) ^0.5
(5-3) + c(-1,1) * qt(.975,18) * Sp * (2/10) ^0.5
Sp <- (VARn+VARo)/2
(3-5) + c(-1,1) * qt(.975,18) * Sp * (2/10) ^0.5
(5-3) + c(-1,1) * qt(.975,18) * Sp * (2/10) ^0.5
Sp <- sqrt((VARn+VARo)/2)
(5-3) + c(-1,1) * qt(.975,18) * Sp * (2/10) ^0.5
(3-5) + c(-1,1) * qt(.975,18) * Sp * (2/10) ^0.5
H0 <- 6
SD0 <- 2
rm(SD0)
Sd0 <- 2
C <- H0 - Sd0 * 1.645
1.645 * Sd0
C <- H0 - Sd0 * qt(0.975,99)
C
qt(0.975,99)
Sp <- sqrt((-3+1)/2)
Sp <- sqrt((1-3)/2)
sqrt(2/2)
sp <-1
Sp <- 1
rm(sp)
rm(Sd0,H0,C)
(-3-1) + c(-1,1) * qt(.9,18) * Sp * (2/9) ^0.5
Sp <- (1.5ˆ2+1.8ˆ2)/2
Sp <- (1.5^2+1.8^2)/2
Sp
(-3-1) + c(-1,1) * qt(.9,18) * Sp * (2/9) ^0.5
Sp <- sqrt((1.5^2+1.8^2)/2)
(-3-1) + c(-1,1) * qt(.9,18) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.9,17) * Sp * (2/9) ^0.5
Sp <- sqrt(((1.5^2)+(1.8^2))/2)
(-3-1) + c(-1,1) * qt(.9,17) * Sp * (2/9) ^0.5
Sp <- sqrt((8*(1.5^2)+8*(1.8^2))/(16)
;
Sp <- sqrt((8*(1.5^2)+8*(1.8^2))/(16))
(-3-1) + c(-1,1) * qt(.9,17) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.975,17) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.975,16) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^0.5
(-3-1) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^ 0.5
(-1-3) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^ 0.5
(-3-1) + c(-1,1) * qt(.9,16) * Sp * (2/9) ^ 0.5
library(manipulate)
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975,df=2)
myplot2(20)
sleep
range(g1)
range(g2)
difference = g2 - g1
difference <- g2 - g1
mean(difference)
s <- sd(difference)
mn + c(-1,1) * qt(.975, df=9) / (s/sqrt(10))
mn + c(-1,1) * qt(.975, df=9) * s /sqrt(10))
mn + c(-1,1) * qt(.975, df=9) * s /sqrt(10)
t.test(g2-g1)$conf.int
t.test(difference)$conf.int
sp <- 7*(15.34)^2+21*(18.23)^2
sp <- 7*(15.34)^2+20*(18.23)^2
ns <- 7+20
sp <- sqrt(sp/ns)
(132.86-127.44) * c(-1,1) * qt(.975,ns) * sp * sqrt(1/8+1/21)
(132.86-127.44) + c(-1,1) * qt(.975,ns) * sp * sqrt(1/8+1/21)
132.86-127.44 + c(-1,1) * qt(.975,ns) * sp * sqrt(1/8+1/21)
sp <- sqrt((var(g1)*9+var(g2)*9)/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1,1) * qt(.975,18) * sp * sqrt(2/10)
md + c(-1,1) * qt(.975,18) * sp * sqrt(1/5)
t.test(g2, g1, paired=FALSE, var.equal = TRUE)$conf
t.test(g2, g1, paired=TRUE)$conf
num <- ((15.34^2)/8+(18.23^2)/21)^2
den < (15.34^4)/8^2/7 + (18.23^4)/21^2/20
den <- (15.34^4)/8^2/7 + (18.23^4)/21^2/20
mydf <- num/den
132.86-127.44+c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/7+18.23^2/20)
132.86-127.44+c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
10/sqrt(100)
(32-30)/1
(32-30)/1
(32-30)/(10/4)
15
qt(.95,df=15)
dim(fs)
t.test(fs$fheight,fs$sheightm,paired=TRUE)
t.test(fs$fheight,y=fs$sheightm,paired=TRUE)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
0.14453125
mybin[7]
c(mybin[7] ,mybin[8])
mybin[7] and mybin[8]
.144
.035
7
8
cbind(c(1,2,3,4,5),c(140,138,150,148,135),c(132,135,151,146,130))
sbp <- cbind(c(1,2,3,4,5),c(140,138,150,148,135),c(132,135,151,146,130))
srt(sbp)
str(sbp)
rm sbp
rm(sbp)
sbp <- data.frame(subject = c(1,2,3,4,5), baseline = c(140,138,150,148,135), week2 = c(132,135,151,146,130))
str(sbp)
sbp
t.test(sbp$week2-sbp$baseline)
t.test(sbp$baseline-sbp$baseline)
t.test(sbp$baseline-sbp$week2)
t.test(sbp$baseline-sbp$week2)
1100 + qt(.975,df=8)
1100 + qt(.975,df=8) * 30/sqrt(8)
1100 + c(-1,1) * qt(.975,df=8) * 30/sqrt(8)
1100 + c(-1,1) * qt(.975,df=8) * 30/sqrt(9)
?t.test
swirl
swirl()
pt(q=2.5, df=15, lower.tail=F)
pt(q=2.5, df=15, lower.tail=FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6,size=9, prob=.5, lower.tail=FALSE)
pbinom(6,size=8, prob=.5, lower.tail=FALSE)
pbinom(7,size=8, prob=.5, lower.tail=TRUE)
ppois(9, lambda=5, lower.tail = TRUE)
ppois(9, 5, lower.tail = TRUE)
ppois(9, 5, lower.tail = FALSE)
ppois(10/1787*100, 1, lower.tail = FALSE)
ppois(1, 1, lower.tail = FALSE)
ppois(10/1787, 1, lower.tail = FALSE)
ppois(10/1787, 0.1, lower.tail = FALSE)
ppois(10/1787*100, 1, lower.tail = FALSE)
tx = 10/1787
tx
tx <- tx * 100
tx
ppois(tx,1,lower.tail = FALSE)
ppois(tx,0.1,lower.tail = FALSE)
pairs(mtcars, panel = panel.smooth, main = "Cars Performance")
pairs(mtcars, panel = panel.smooth, main = "Cars Performance", col = 3)
require("graphics")
pairs(mtcars, panel = panel.smooth, main = "Cars Performance", col = 3)
require("stats")
pairs(mtcars, panel = panel.smooth, main = "Cars Performance", col = 3)
par("mar")
par(mar=c(1,1,1,1))
pairs(mtcars, panel = panel.smooth, main = "Cars Performance", col = 3)
pairs(mtcars, panel = panel.smooth, main = "Cars Performance", col = 5)
pairs(mtcars, panel = panel.smooth, main = "Cars Performance")
par(mar=c(0,0,0,0))
pairs(mtcars, panel = panel.smooth, main = "Cars Performance")
pairs(mtcars, panel = panel.smooth, main = "Cars Performance")
?mtcars
pairs(mtcars[,c("mpg","cyl","disp")], panel = panel.smooth, main = "Cars Performance")
model <- lm(mpg ~ . , mtcars)
summary(model)
?I
install.packages("caret")
# Fitting the model using all variables and finding best predictors
modelFull  <- lm(mpg ~ ., data=mtcars)
final <- step(modelFull, direction = "backward", trace=F)
qqplot(y = final$residuals)
qqplot(final)
qqplot(final, main="QQ Plot")
?qqplot
qqplot(lm(mpg ~ mpg ~ wt + qsec + am, data=mtcars), main="QQ Plot")
final$residuals
qqplot(final$residuals)
qqplot(final$residuals,"norm")
qqplot(y=final$residuals,"norm")
qqnorm(y=final$residuals,"norm")
qqnorm(final$residuals,"norm")
?qqnorm
qqnorm(final$residuals)
qqnorm(final)
plot(final$residuals)
plot(final$residuals, main="Residual Plot", ylab="Residuals")
qqnorm(final$residuals)
par(mar=c(0,0,0,0))
pairs(mtcars, panel = panel.smooth, main = "Cars Performance")
pairs(mtcars[,c("mpg","cyl","disp")], panel = panel.smooth, main = "Cars Performance")
plot(mtcars$mpg ~ mtcars$am)
pairs(mtcars, panel = panel.smooth, main = "Cars Performance")
pairs(mtcars[,c("mpg","cyl","disp")], panel = panel.smooth, main = "Cars Performance")
par(mfrow=c(1,2))
plot(final$residuals, main="Residual Plot", ylab="Residuals")
qqnorm(final$residuals)
par(mfrow=c(1,2))
plot(final$residuals, main="Residual Plot", ylab="Residuals")
qqnorm(final$residuals)
mtext("Diagnostic Plots", side=3, outer=TRUE, line=-3)
plot(final$residuals)
?mar
?par
sumCoef <- summary(final)$coefficients
sumCoef
sumCoef[1,1] + c(-1, 1) * qt(.975, df = final$df) * sumCoef[1, 2]
str(sumCoef)
d <- data.frame(sumCoef)
d
d$Estimate
confInterval <- data.frame(summary(final)$coefficients)
confInterval$min <- -1 * * qt(.975, df = final$df) * confInterval$Estimate
confInterval$min <- -1 * qt(.975, df = final$df) * confInterval$Estimate
confInterval
confInterval$max <- 1 * qt(.975, df = final$df) * confInterval$Estimate
confInterval
qt(.975, df = final$df) * confInterval$Estimate
sumCoef
sumCoef[1,2]
confInterval
confInterval <- data.frame(summary(final)$coefficients)
confInterval$min <- confInterval$Estimate - 1 * qt(.975, df = final$df) * confInterval$Std..Error
confInterval$max <- confInterval$Estimate + 1 * qt(.975, df = final$df) * confInterval$Std..Error
confInterval
qt(.975, df = final$df) * confInterval$Std..Error
confInterval <- data.frame(summary(final)$coefficients)
confInterval$min <- (confInterval$Estimate - 1 * qt(.975, df = final$df)
* confInterval$Std..Error)
confInterval$max <- (confInterval$Estimate + 1 * qt(.975, df = final$df)
* confInterval$Std..Error)
confInterval
confInterval[c(1,2,3,4)]
confInterval[c(1,2,5,6)]
1 * qt(.975, df = final$df)
* confInterval$Std..Error
qt(.975, df = final$df)
* confInterval$Std..Error
qt(.975, df = final$df) * * confInterval$Std..Error)
qt(.975, df = final$df) * confInterval$Std..Error)
qt(.975, df = final$df) * confInterval$Std..Error
setwd("~/DataScience/datasciencecoursera/8_machlearn")
pmlTrainning <- read.csv("pml-training.csv")
pmlTesting <- read.csv("pml-testing.csv")
pmlData <- read.csv("pml-training.csv")
pmlFinalTest <- read.csv("pml-testing.csv")
str(pmlData)
pmlData$classe
View(pmlData)
pmlData$classe
library("caret")
set.seed(666)
# Read Data
pmlData <- read.csv("pml-training.csv")
pmlFinalTest <- read.csv("pml-testing.csv")
inTrain <- createDataPartition(y = pmlData$classe, p = 0.8, list = F)
trainning <- pmlData[inTrain,]
testing <- pmlData[-inTrain,]
str(trainning)
?train
