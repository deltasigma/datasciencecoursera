type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
# Defining canvas for multiple graphs
par(mfrow = c(2,2))
par(mar = c(2,4,2,2))
# Draw graph 1
plot(housedata$DateTime, housedata$Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = "")
# Draw graph 2
plot(housedata$DateTime, housedata$Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime")
# Draw graph 3: Sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
# Defining canvas for multiple graphs
par(mfrow = c(2,2))
par(mar = c(2,4,2,2))
# Draw graph 1
plot(housedata$DateTime, housedata$Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = "")
# Draw graph 2
plot(housedata$DateTime, housedata$Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime")
# Draw graph 3: Sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
## Load necessary Library
library(lubridate)
## Function to get data from download or local filesystem
getdata <- function(filename = "VAZIO")  {
# Download data if its not present
if (!file.exists(filename)) {
# Dataset URL
dataURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
# Create temporary file for zip download
zipTemp <- tempfile()
# Save data on local filesystem
download.file(dataURL, zipTemp, method="curl")
# Open the zip file
data <- read.table(unz(zipTemp, "household_power_consumption.txt"),
sep = ";",
na.string = "?",
header = TRUE)
# Delete temp file
unlink(zipTemp)
} else {
# File found locally. Load it!
data <- read.table("household_power_consumption.txt",
sep = ";",
na.string = "?",
header = TRUE)
}
# Fix the date format
#dados$Date <- as.POSIXct(strptime(dados$Date, "%d/%m/%Y"))
data$DateTime <-dmy_hms(paste(data$Date, data$Time, sep=" "))
data$Date <-dmy(data$Date)
#data$Time <-hms(data$Time)
# Return the data
data[data$Date == ymd("2007-02-01") | data$Date == ymd("2007-02-02"), ]
#data
}
# Loading data
housedata <- getdata("household_power_consumption.txt")
# Create PNG file
png(file = "plot4.png", width = 480, height = 480)
# Defining canvas for multiple graphs
par(mfrow = c(2,2))
par(mar = c(2,4,2,2))
# Draw graph 1
plot(housedata$DateTime, housedata$Global_active_power,
type = "l",
ylab = "Global Active Power",
xlab = "")
# Draw graph 2
plot(housedata$DateTime, housedata$Voltage,
type = "l",
ylab = "Voltage",
xlab = "datetime")
# Draw graph 3: Sub_metering_1
plot(housedata$DateTime, housedata$Sub_metering_1,
type = "l",
ylab = "Energy sub metering",
xlab = "")
# Plot graph 3: Sub_metering_2
lines(housedata$DateTime, housedata$Sub_metering_2,
type = "l",
col = "red")
# Plot graph 3: Sub_metering_3
lines(housedata$DateTime, housedata$Sub_metering_3,
type = "l",
col = "blue")
# Plot graph 3: Create legend
legend("topright",
pch = "_",
col = c("black","red","blue"),
bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Draw graph 4
plot(housedata$DateTime, housedata$Global_reactive_power,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
# Create PNG file
dev.off()
install.library('RMySQL')
library.install('RMySQL')
install.packages('RMySQL')
install.packages('RMySQL', type="source")
library('RMySQL')
db <- dbConnect(MySQL,user="genome",)
db <- dbConnect(MySQL,user="genome", host="genome-mysql.cse.ucsc.edu")
db <- dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(db, "show databases;")
dbDisconnect(db)
result
count(result)
head(result)
source('http://bioconductor.org/biocLite.R')
biocLite("rhdf5")
setwd("~/DataScience/datasciencecoursera/4_exdata/proj1")
##Load dplyr
library(dplyr)
##Read NEI and SCC data
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
install.packages(dplyr)
library(dplyr)
install.packages(dplyr)
nei <- NEI
scc <- SCC
rm(NEI,SCC)
## spliting NEI data by year, and computing the total emissions
s <- split(nei, nei$year)
y <- lapply(s, function(x) sum(x[, c("Emissions")]))
## converting lapply list to data frame for plotting
ydf <- as.data.frame(y)
## adding a row for years
ydf2 <- rbind(ydf[1,],c("1999", "2002", "2005", "2008"),ydf[-(1),])
## Plotting in base system
png("plot1_exploratory.png")
plot(as.numeric(ydf2[2, ]), as.numeric(ydf2[1, ])/1e+6,
xlab= "Year",
ylab= "Total Emissions (million tons)",
pch=20, type = "b", lwd=2, xlim=c(1998,2009), ylim= c(3, 8),
axes=F, yaxt="n")
axis(side = 1)
axis(side = 2, at = seq(3, 8, by = 1), labels = seq(3, 8, by = 1), las=1)
title(main = "Total Emissions from PM2.5 in the United State")
box()
dev.off()
## subsetting NEI data for Baltimore city, fips code: 24510
nei_baltimore <- nei[which(nei[, "fips"] == 24510), ]
## computing total sum of emissions in Baltimore subset of NEI
ybal <- tapply(nei_baltimore$Emissions, nei_baltimore$year, sum)
## preparing the input for plotting
year <- as.numeric(names(ybal))
sum_em <- unname(ybal)
## Plotting in base system
png("plot2_exploratory.png")
plot(year, sum_em, type = "b", lwd=2, axes=F, yaxt="n", xlim=c(1998,2009),
ylim= c(1800, 3300), xlab= "Year", ylab= "Total Emissions (tons)")
axis(side = 1)
axis(side = 2, at = seq(1800, 3300, by = 300), labels = seq(1800, 3300, by = 300), las=1)
title(main = "Total Emissions from PM2.5 in Baltimore city")
box()
dev.off()
## subsetting NEI data for Baltimore city, fips code: 24510
nei_baltimore <- nei[which(nei[, "fips"] == 24510), ]
## using aggregate to split data in groups: Emissions from four types of sources per yr
df <- aggregate(cbind(nei_baltimore$Emissions) ~ nei_baltimore$year +
nei_baltimore$type , nei_baltimore, sum)
df[ ,2] <- as.factor(df[, 2]) # making type a factor for plotting facets
## Plotting using qplot (part of ggplot2)
library(ggplot2)
png("plot3_exploratory.png", width = 550, height = 550, units = "px")
names(df) <- c("yr", "type", "emission")
qplot(yr, emission, data = df, facets = . ~ type, geom = c("point", "line"),
main = "PM2.5 Emissions by type in Baltimore city", xlab="year", ylab="Emissions (tons)")
dev.off()
## subsetting NEI data with scc numbers that in SCC data have related EI.Sector factors.
## to get the releavant indices in SCC data that their EI column includes "Coal" :
x <- grep("Coal", scc$EI.Sector) #length(x)  is 99!
# In scc data and in its SCC column, subsetting above x indices and get
# the intersection of right SCC indices in nei data to finally sum the Emissions!
y <- scc[["SCC"]][x]
# nei "indices" that their nei$SCC values intersect with those of scc$SCC[x]:
z<- which(nei[["SCC"]] %in% y)
#length(z) is 28480, As there are repititions in nei for those SCC values in scc data
nei_sub <- nei[z, ]
nei_sub2 <- subset(nei_sub, select=c(SCC, Emissions, year))
## constructing the final data frame:
p4 <- aggregate(cbind(nei_sub2$Emissions)~nei_sub2$year, nei_sub2, sum )
## Plotting
png("plot4_exploratory.png")
names(p4) <- c("yr", "emission")
qplot(yr, emission/(1e+03), data=p4, geom = c("point", "line"),
colour = I("blue"), xlab="year", ylab="Emissions (thousands tons)",
main = "PM2.5 Emissions from coal combustion-related sources")
dev.off()
## The same as for part 4, but for Vehicles in Baltimor subset
## finding the indices in scc data for Vehicles:
veh_ind<-grep("Vehicles", scc$EI.Sector) # length(veh_ind) is 1138
veh_values<-scc[["SCC"]][veh_ind]
## subsetting the relevant NEI data for the above indices in Baltimore city:
nei_baltimore <- nei[which(nei[, "fips"] == 24510), ]
z<- which(nei_baltimore[["SCC"]] %in% veh_values) # length(z) is 1119
neibaltimor_sub <- nei_baltimore[z, ]
neibaltimor_sub2 <- subset(neibaltimor_sub, select=c(SCC, Emissions, year))
## constructing the final data frame:
p5 <- aggregate(cbind(neibaltimor_sub2$Emissions) ~ neibaltimor_sub2$year,
neibaltimor_sub2, sum )
## Plotting
png("plot5_exploratory.png")
names(p5) <- c("yr", "emission")
qplot(yr, emission, data=p5, geom = c("point", "line"),
colour = I("red"), xlab="year", ylab="Emissions (tons)",
main = "PM2.5 Emissions from Vehicles in Baltimore city")
dev.off()
nei <- readRDS("exdata-data-NEI_data/summarySCC_PM25.rds")
scc <- readRDS("exdata-data-NEI_data/Source_Classification_Code.rds")
## part 6 is similar to part 5
nei_los <- nei[which(nei[, "fips"] == "06037"), ] # Los Angeles fips 06037
nei_baltimore <- nei[which(nei[, "fips"] == 24510), ]
## finding the indices in scc data for Vehicles:
veh_ind<-grep("Vehicles", scc$EI.Sector)
veh_values<-scc[["SCC"]][veh_ind]
## subsetting the relevant NEI data for the above indices in Baltimore city:
z<- which(nei_baltimore[["SCC"]] %in% veh_values) # length(z) is 1119
neibaltimor_sub <- nei_baltimore[z, ]
neibaltimor_sub2 <- subset(neibaltimor_sub, select=c(SCC, Emissions, year))
## subsetting the relevant NEI data for the above indices in Los Angeles:
z2 <- which(nei_los[["SCC"]] %in% veh_values)
neilos_sub <- nei_los[z2, ]
neilos_sub2 <- subset(neilos_sub, select=c(SCC, Emissions, year))
## constructing the final data frames for Baltimore (p5) and Los Angeles (p6):
p5 <- aggregate(cbind(neibaltimor_sub2$Emissions) ~ neibaltimor_sub2$year, neibaltimor_sub2, sum )
p6 <- aggregate(cbind(neilos_sub2$Emissions) ~ neilos_sub2$year, neilos_sub2, sum )
## Preparing names, labels and colors for plotting
names(p5) <- c("yr5", "emission5"); names(p6) <- c("yr6", "emission6")
x <- p5$yr5
City <- c(rep("Baltimore", 4), rep("Los Angeles", 4) )
value <- c(p5$emission5, p6$emission6)
df <- data.frame(x, City, value )
## Plotting
png("plot6_exploratory.png")
g <- ggplot(df, aes(x=x, y=value, group=City, colour=City) ) +
geom_line(size=1) + labs(x = "Year", y = "Emissions (tons)") +
labs(title = "Emissions from Vehicles in Baltimore city & Los Angeles") +
scale_color_manual(values=c("red", "blue"))
g + annotate("text", x = c(2003.5, 2003.5, 2003.5, 2003.5), y = c(2800, 3200, 2000, 1600),
label = c("Bal. 2008 - Bal. 1999 = -258.5",
"Los. 2008 - Los. 1999 = +170.2",
"Emission in Los. increased over 9 yrs, but",
"the CHANGE in Bal. is 1.5 times larger!"))
dev.off()
NEI <- nei
SCC <- scc
rm(nei,scc)
rm(p4,p5,p6,ydf)
rm(ydf2,City,g)
rm(s,sum_em,value,veh_values,x,y,ybal,year,z,z2)
rm(veh_ind)
library("plyr")
## Read files into R
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Convert into data.table
NEI.DT = data.table(NEI)
SCC.DT = data.table(SCC)
data <- transform(NEI,year=factor(year))
## Plot Data
plotdata <- ddply(data,.(year),summarize,sum=sum(Emissions))
png(filename = "plot1.png", width = 480, height = 480)
plot(plotdata$year, plotdata$sum, type="n", xlab="Year", ylab="Total PM2.5 Emission",
main = "Annual Emissions", boxwex=0.01)
lines(plotdata$year,plotdata$sum)
dev.off()
data <- transform(NEI,year=factor(year))
data <- data[data$fips=="24510",]
## Plot the data
plotdata <- ddply(data, .(year), summarize, sum=sum(Emissions))
png(filename = "plot2.png", width = 480, height = 480)
plot(plotdata$year, plotdata$sum, type="n", xlab="Year",ylab="Total PM2.5 Emission",
main="PM2.5 Emission in Baltimore City",boxwex=0.01)
lines(plotdata$year,plotdata$sum)
dev.off()
data <- transform(NEI,year=factor(year))
data <- data[data$fips=="24510",]
## Plot Data
plotdata <- ddply(data, .(year,type), summarize, sum = sum(Emissions))
png(filename = "plot3.png", width = 480, height = 480)
gplot <- ggplot(plotdata, aes(year, sum))
gplot + geom_point() + facet_grid(.~type) + labs(title = "PM2.5 Emission in Baltimore city",
y = "Total PM2.5 Emission", x = "Year")
dev.off()
coalSCC <- SCC[grepl("Fuel Comb.*Coal", SCC$EI.Sector), ]
coalEmissions <- NEI[(NEI$SCC %in% coalSCC$SCC),]
coalEmissions <- aggregate(Emissions ~ year, data = coalEmissions, FUN=sum)
## Plot the data
png(filename = "plot4.png", width = 480, height = 480)
g <- ggplot(coalEmissions, aes(year, Emissions))
g + geom_point() + geom_line() + labs(x = "Year",
y = "Total PM2.5 Emission", title = "Emissions from Coal Combustion in the US")
dev.off()
baltimoreEmissions <- NEI[(NEI$fips == "24510") & (NEI$type == "ON-ROAD"),]
aggr <- aggregate(Emissions ~ year, data = baltimoreEmissions, FUN=sum)
## Plot the data
png(filename = "plot5.png", width = 480, height = 480)
g <- ggplot(aggr, aes(year, Emissions))
g + geom_point() + geom_line() + labs(x = "Year",
y = "Total PM2.5 Emissions", title = "Emissions from Motor Vehicle Sources in Baltimore City")
dev.off()
## Baltimore emissions from motor vehicle sources
bEmissions <- NEI[(NEI$fips == "24510") & (NEI$type == "ON-ROAD"),]
bAggr <- aggregate(Emissions ~ year, data = bEmissions, FUN = sum)
## Los Angeles emissions from motor vehicle sources
laEmissions <- NEI[(NEI$fips == "06037") & (NEI$type == "ON-ROAD"),]
laAggr <- aggregate(Emissions ~ year, data = laEmissions, FUN = sum)
## Plot the data
png(filename = "plot6.png", width = 680, height = 480)
ggplot() +
geom_line(data = bAggr, aes(x = year, y = Emissions, color = "Baltimore")) +
geom_line(data = laAggr, aes(x = year, y = Emissions, color = "Los Angeles"))  +
labs(x = "Year", y = "Total PM2.5 Emissions",
title = "Emissions from Motor Vehicle Sources in Baltomore and Los Angeles") +
labs(color = "Legend")
dev.off()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
library(dplyr)
data<-group_by(NEI,year)
data1 <- summarize(data,tot_pol=sum(Emissions))
data1$fyear <- factor(data1$year)
data1$polm <- data1$tot_pol/1000000
dev.copy(png,"plot1.png",width=720,height=720)
plot(data1$year,data1$polm,type="o",col="blue",lwd=3,pch=19,
xlab="Year",ylab="PM2.5 emitted, in million tons",
main="Total PM2.5 emission from all sources\n for 1999, 2002, 2005, and 2008",axes=F,ylim=c(0,10))
axis(side=1,at=seq(1999,2008,3),las=0)
axis(side=2,at=seq(0,8),las=2)
lm1 <- lm(polm~year,data=data1)
abline(lm1,lty="dotted",lwd=2,col="red")
legend("topleft",c("blue - Actual Data","red - Linear Regression Line"))
dev.off()
install.packages('dplyr', repos='http://cran.rstudio.com/')
library(dplyr)
data<-group_by(NEI,year)
data1 <- summarize(data,tot_pol=sum(Emissions))
data1$fyear <- factor(data1$year)
data1$polm <- data1$tot_pol/1000000
dev.copy(png,"plot1.png",width=720,height=720)
plot(data1$year,data1$polm,type="o",col="blue",lwd=3,pch=19,
xlab="Year",ylab="PM2.5 emitted, in million tons",
main="Total PM2.5 emission from all sources\n for 1999, 2002, 2005, and 2008",axes=F,ylim=c(0,10))
axis(side=1,at=seq(1999,2008,3),las=0)
axis(side=2,at=seq(0,8),las=2)
lm1 <- lm(polm~year,data=data1)
abline(lm1,lty="dotted",lwd=2,col="red")
legend("topleft",c("blue - Actual Data","red - Linear Regression Line"))
dev.off()
data<-group_by(NEI,year)
data1 <- summarize(data,tot_pol=sum(Emissions))
data1$fyear <- factor(data1$year)
data1$polm <- data1$tot_pol/1000000
plot(data1$year,data1$polm,type="o",col="blue",lwd=3,pch=19,
xlab="Year",ylab="PM2.5 emitted, in million tons",
main="Total PM2.5 emission from all sources\n for 1999, 2002, 2005, and 2008",axes=F,ylim=c(0,10))
axis(side=1,at=seq(1999,2008,3),las=0)
axis(side=2,at=seq(0,8),las=2)
lm1 <- lm(polm~year,data=data1)
abline(lm1,lty="dotted",lwd=2,col="red")
legend("topleft",c("blue - Actual Data","red - Linear Regression Line"))
data<-group_by(NEI[NEI$fips=="24510",],year)
data1 <- summarize(data,tot_pol=sum(Emissions))
data1$fyear <- factor(data1$year)
data1$polm <- data1$tot_pol/1000
dev.copy(png,"plot2.png",width=720,height=720)
plot(data1$year,data1$polm,type="o",col="blue",lwd=3,pch=19,
xlab="Year",ylab="PM2.5 emitted, in thousand tons",
main="Total PM2.5 emission for Baltimore, Maryland (fips=24510)\n for 1999, 2002, 2005, and 2008",
axes=F,ylim=c(0,10))
axis(side=1,at=seq(1999,2008,3),las=0)
axis(side=2,at=seq(0,4),las=2)
lm1 <- lm(polm~year,data=data1)
abline(lm1,lty="dotted",lwd=2,col="red")
legend("topleft",c("blue - Actual Data","red - Linear Regression Line"))
dev.off()
library(ggplot2)
data<-group_by(NEI[NEI$fips=="24510",],year,type)
data1 <- summarize(data,tot_pol=sum(Emissions))
data1$fyear <- factor(data1$year)
data1$ftype <- factor(data1$type)
data1$polm <- data1$tot_pol
dev.copy(png,"plot3.png",width=720,height=720)
qplot(year,polm,data=data1,geom=c("point","smooth"),se=F,method="lm",col=ftype,
main="Total emissions from 1999-2008 for Baltimore City\n by type of source",
xlab="Year",
ylab="PM2.5 emitted, in tons")
dev.off()
coal <- which(grepl("COAL",toupper(SCC$EI.Sector)))
SCCcoal <- SCC[coal,]
data<-merge(NEI,SCCcoal,by="SCC",all.x=F)
data<- group_by(data,year)
data1 <- summarize(data,tot_pol=sum(Emissions))
data1$polm <- data1$tot_pol/1000
dev.copy(png,"plot4.png",width=720,height=720)
p1<-qplot(year,polm,data=data1,geom=c("point","smooth","line"),se=F,method="lm",
main="Total emissions from 1999-2008 across US\n  coal combustion-related sources (Coal in EI.Sector)",
xlab="Year",
ylab="PM2.5 emitted, in thousand tons")
p1 + annotate("text", x = 2002, y = 420, label = "Black = Actual               ") +
annotate("text", x = 2002, y = 400, label = "Blue = Regression Line",col="blue")
dev.off()
motor <- which(grepl("^ONROAD",toupper(SCC$Data.Category)))
SCCmotor <- SCC[motor,]
data<-merge(NEI,SCCmotor,by="SCC",all.x=F)
data<- group_by(data[data$fips=="24510",],year)
data1 <- summarize(data,tot_polm=sum(Emissions))
data1$polm <- data1$tot_pol
dev.copy(png,"plot5.png",width=720,height=720)
p1 <- qplot(year,polm,data=data1,geom=c("point","smooth","line"),se=F,method="lm",
main="Total emissions from 1999-2008 for Baltimore City\n  Motor-Vehicle sources (Data.Category=Onroad)",
xlab="Year",
ylab="PM2.5 emitted, in tons")
p1 + annotate("text", x = 2005, y = 300, label = "Black = Actual               ") +
annotate("text", x = 2005, y = 290, label = "Blue = Regression Line",col="blue")
dev.off()
motor <- which(grepl("^ONROAD",toupper(SCC$Data.Category)))
SCCmotor <- SCC[motor,]
data<-merge(NEI,SCCmotor,by="SCC",all.x=F)
data<- group_by(data[data$fips=="24510" | data$fips=="06037",],year,fips)
data1 <- summarize(data,tot_polm=sum(Emissions))
data1$polm <- data1$tot_pol
change <- tail(data1$polm,-2)-head(data1$polm,-2)
data2<- cbind(head(data1,-2),change)
data2$pchange <- data2$change/data2$polm*100
data2$county <- ifelse(data2$fips=="06037","Los Angeles County","Baltimore City")
data2$yearno <- as.integer(c(1,1,2,2,3,3))
dev.copy(png,"plot6.png",width=720,height=720)
qplot(yearno,pchange,data=data2,geom=c("point","line"),se=F,method="lm",
main="% YOY Change in Total emissions from 1999-2008\n  Motor-Vehicle sources (Data.Category=Onroad)\n Baltimore City vs Los Angeles County",
xlab="1=change from 1999-2002, 2=2002-2005,3=2005-2008",
ylab="PM2.5 emitted, in tons",col=county)
dev.off()
